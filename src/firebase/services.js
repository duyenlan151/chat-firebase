import firebase, { db } from "./config";

export const addDocument = (collection, data) => {
    const query = db.collection(collection);

    query.add({
        ...data,
        createAt: firebase.firestore.FieldValue.serverTimestamp(),
    });
};
// tao keywords cho displayName, su dung cho search
export const generateKeywords = (displayName) => {
    // liet ke tat cac hoan vi. vd: name = ["David", "Van", "Teo"]
    // => ["David", "Van", "Teo"], ["David", "Teo", "Van"], ["Teo", "David", "Van"],...
    const name = displayName.split(" ").filter((word) => word);

    const length = name.length;
    let flagArray = [];
    let result = [];
    let stringArray = [];

    /**
     * khoi tao mang flag false
     * dung de danh dau xem gia tri
     * tai vi tri nay da duoc su dung
     * hay chua
     **/
    for (let i = 0; i < length; i++) {
        flagArray[i] = false;
    }

    const createKeywords = (name) => {
        const arrName = [];
        let curName = "";
        name.split("").forEach((letter) => {
            curName += letter;
            arrName.push(curName);
        });
        return arrName;
    };

    function findPermutation(k) {
        for (let i = 0; i < length; i++) {
            if (!flagArray[i]) {
                flagArray[i] = true;
                result[k] = name[i];

                if (k === length - 1) {
                    stringArray.push(result.join(" "));
                }

                findPermutation(k + 1);
                flagArray[i] = false;
            }
        }
    }

    findPermutation(0);

    const keywords = stringArray.reduce((acc, cur) => {
        const words = createKeywords(cur);
        return [...acc, ...words];
    }, []);

    return keywords;
};

const nameData = {
    firstName: [
        "nar",
        "An",
        "Alfr",
        "Alvi",
        "Ari",
        "Arinbjorn",
        "Arngeir",
        "Arngrim",
        "Arnfinn",
        "Asgeirr",
        "Askell",
        "Asvald",
        "Bard",
        "Baror",
        "Bersi",
        "Borkr",
        "Bjarni",
        "Bjorn",
        "Brand",
        "Brandr",
        "Cairn",
        "Canute",
        "Dar",
        "Einarr",
        "Eirik",
        "Egill",
        "Engli",
        "Eyvindr",
        "Erik",
        "Eyvind",
        "Finnr",
        "Floki",
        "Fromund",
        "Geirmundr",
        "Geirr",
        "Geri",
        "Gisli",
        "Gizzur",
        "Gjafvaldr",
        "Glumr",
        "Gorm",
        "Grmir",
        "Gunnarr",
        "Guomundr",
        "Hak",
        "Halbjorn",
        "Halfdan",
        "Hallvard",
        "Hamal",
        "Hamundr",
        "Harald",
        "Harek",
        "Hedinn",
        "Helgi",
        "Henrik",
        "Herbjorn",
        "Herjolfr",
        "Hildir",
        "Hogni",
        "Hrani",
        "Ivarr",
        "Hrolf",
        "Jimmy",
        "Jon",
        "Jorund",
        "Kalf",
        "Ketil",
        "Kheldar",
        "Klaengr",
        "Knut",
        "Kolbeinn",
        "Kolli",
        "Kollr",
        "Lambi",
        "Magnus",
        "Moldof",
        "Mursi",
        "Njall",
        "Oddr",
        "Olaf",
        "Orlyg",
        "Ormr",
        "Ornolf",
        "Osvald",
        "Ozurr",
        "Poror",
        "Prondir",
        "Ragi",
        "Ragnvald",
        "Refr",
        "Runolf",
        "Saemund",
        "Siegfried",
        "Sigmundr",
        "Sigurd",
        "Sigvat",
        "Skeggi",
        "Skomlr",
        "Slode",
        "Snorri",
        "Sokkolf",
        "Solvi",
        "Surt",
        "Sven",
        "Thangbrand",
        "Thjodoft",
        "Thorod",
        "Thorgest",
        "Thorvald",
        "Thrain",
        "Throst",
        "Torfi",
        "Torix",
        "Tryfing",
        "Ulf",
        "Valgaror",
        "Vali",
        "Vifil",
        "Vigfus",
        "Vika",
        "Waltheof",
    ],
    lastNamePrefix: [
        "Aesir",
        "Axe",
        "Battle",
        "Bear",
        "Berg",
        "Biscuit",
        "Black",
        "Blade",
        "Blood",
        "Blue",
        "Boar",
        "Board",
        "Bone",
        "Cage",
        "Cave",
        "Chain",
        "Cloud",
        "Coffee",
        "Code",
        "Death",
        "Dragon",
        "Dwarf",
        "Eel",
        "Egg",
        "Elk",
        "Fire",
        "Fjord",
        "Flame",
        "Flour",
        "Forge",
        "Fork",
        "Fox",
        "Frost",
        "Furnace",
        "Cheese",
        "Giant",
        "Glacier",
        "Goat",
        "God",
        "Gold",
        "Granite",
        "Griffon",
        "Grim",
        "Haggis",
        "Hall",
        "Hamarr",
        "Helm",
        "Horn",
        "Horse",
        "House",
        "Huskarl",
        "Ice",
        "Iceberg",
        "Icicle",
        "Iron",
        "Jarl",
        "Kelp",
        "Kettle",
        "Kraken",
        "Lake",
        "Light",
        "Long",
        "Mace",
        "Mead",
        "Maelstrom",
        "Mail",
        "Mammoth",
        "Man",
        "Many",
        "Mountain",
        "Mutton",
        "Noun",
        "Oath",
        "One",
        "Owl",
        "Pain",
        "Peak",
        "Pine",
        "Pot",
        "Rabbit",
        "Rat",
        "Raven",
        "Red",
        "Refreshingbeverage",
        "Ring",
        "Rime",
        "Rock",
        "Root",
        "Rune",
        "Salmon",
        "Sap",
        "Sea",
        "Seven",
        "Shield",
        "Ship",
        "Silver",
        "Sky",
        "Slush",
        "Smoke",
        "Snow",
        "Spear",
        "Squid",
        "Steam",
        "Stone",
        "Storm",
        "Swine",
        "Sword",
        "Three",
        "Tongue",
        "Torch",
        "Troll",
        "Two",
        "Ulfsark",
        "Umlaut",
        "Unsightly",
        "Valkyrie",
        "Wave",
        "White",
        "Wolf",
        "Woman",
        "Worm",
        "Wyvern",
    ],
    lastNameSuffix: [
        "admirer",
        "arm",
        "axe",
        "back",
        "bane",
        "baker",
        "basher",
        "beard",
        "bearer",
        "bender",
        "blade",
        "bleeder",
        "blender",
        "blood",
        "boiler",
        "bone",
        "boot",
        "borer",
        "born",
        "bow",
        "breaker",
        "breeder",
        "bringer",
        "brow",
        "builder",
        "chaser",
        "chiller",
        "collar",
        "counter",
        "curser",
        "dancer",
        "deck",
        "dottir",
        "doubter",
        "dreamer",
        "drinker",
        "drowner",
        "ear",
        "eater",
        "face",
        "fearer",
        "friend",
        "foot",
        "fury",
        "gorer",
        "grim",
        "grinder",
        "grower",
        "growth",
        "hacker",
        "hall",
        "hammer",
        "hand",
        "hands",
        "head",
        "hilt",
        "hugger",
        "hunter",
        "killer",
        "leg",
        "licker",
        "liker",
        "lost",
        "lover",
        "maker",
        "mender",
        "minder",
        "miner",
        "mocker",
        "monger",
        "neck",
        "puncher",
        "rage",
        "rhyme",
        "rider",
        "ringer",
        "roarer",
        "roller",
        "sailor",
        "screamer",
        "sequel",
        "server",
        "shield",
        "shoe",
        "singer",
        "skinner",
        "slinger",
        "slugger",
        "sniffer",
        "son",
        "smasher",
        "speaker",
        "stinker",
        "sucker",
        "sword",
        "tail",
        "tamer",
        "taster",
        "thigh",
        "tongue",
        "tosser",
        "tracker",
        "washer",
        "wielder",
        "wing",
        "wisher",
        "wrath",
    ],
};

export const autoGenerateName = () => {
    let firstName = nameData.firstName[Math.floor(Math.random()*nameData.firstName.length)];
    let lastNamePrefix = nameData.lastNamePrefix[Math.floor(Math.random()*nameData.lastNamePrefix.length)];
    return (firstName + '' + lastNamePrefix);
}